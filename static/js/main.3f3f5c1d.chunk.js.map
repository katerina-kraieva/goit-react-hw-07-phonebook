{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Container/Container.module.css","Components/Filter/Filter.module.css","Components/ContactList/fade.module.css","redux/contacts/contacts-action.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","Components/Container/Container.jsx","Components/ContactForm/ContactForm.jsx","Components/Filter/Filter.jsx","Components/ContactList/ContactList.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","addContactsRequest","createAction","addContactsSuccess","addContactsError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","clearError","changeFilter","contacts","createReducer","_","payload","state","action","filter","id","loading","error","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","logger","store","configureStore","reducer","devTools","process","axios","defaults","baseURL","contactsOperations","fetchContacts","dispatch","a","get","then","data","catch","massage","addContact","nam","tel","contact","name","number","post","deleteContacts","Id","console","log","delete","getContacts","getFilter","contactsSelector","getLoading","getError","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","Container","title","children","className","s","container","defaultProps","ContactForm","handleChangeName","e","setState","currentTarget","value","handleChangeNumber","handleSubmit","preventDefault","trim","toast","props","find","onSubmit","this","nameId","shortid","generate","telId","form","htmlFor","input","type","onChange","button","Component","connect","target","findId","label","items","onDeleteNumber","TransitionGroup","component","list","map","item","CSSTransition","timeout","classNames","PhoneList","onClick","App","setTimeout","in","appear","unmountOnExit","position","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f3f5c1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__iFFev\",\"input\":\"ContactForm_input__3iLvd\",\"button\":\"ContactForm_button__3hUkx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1aZMA\",\"item\":\"ContactList_item__3IdZK\",\"button\":\"ContactList_button__a7Kdy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2J1TU\",\"title\":\"Container_title__2DZal\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3v8qj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__26VUN\",\"enterActive\":\"fade_enterActive__65FJN\",\"exit\":\"fade_exit__Y8oAB\",\"exitActive\":\"fade_exitActive__2e9Ev\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContactsRequest = createAction('todos/addContactsRequest');\r\nexport const addContactsSuccess = createAction('todos/addContactsSuccess');\r\nexport const addContactsError = createAction('todos/addContactsError');\r\n\r\nexport const fetchContactsRequest = createAction('todos/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('todos/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('todos/fetchContactsError');\r\n\r\nexport const deleteContactsRequest = createAction('todos/deleteContactsRequest');\r\nexport const deleteContactsSuccess = createAction('todos/deleteContactsSuccess');\r\nexport const deleteContactsError = createAction('todos/deleteContactsError');\r\n\r\nexport const clearError = createAction('todos/clearError');\r\n\r\nexport const changeFilter = createAction('contacts/filter');","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  changeFilter,\r\n  clearError,\r\n} from './contacts-action';\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactsSuccess]: (state, action) => [action.payload, ...state],\r\n  [deleteContactsSuccess]: (state, action) => state.filter(({ id }) => id !== action.payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactsRequest]: () => true,\r\n  [addContactsSuccess]: () => false,\r\n  [addContactsError]: () => false,\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [deleteContactsRequest]: () => true,\r\n  [deleteContactsSuccess]: () => false,\r\n  [deleteContactsError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [addContactsError]: (_, { payload }) => payload,\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [deleteContactsError]: (_, { payload }) => payload,\r\n  [clearError]: () => null,\r\n});\r\nconst contactsReducer = combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\nexport default contactsReducer;","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      // ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: contactsReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default store;","import axios from 'axios';\r\nimport {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n} from './contacts-action';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error.massage)));\r\n};\r\n\r\nexport const addContact = (nam, tel) => dispatch => {\r\n  const contact = {\r\n    name: nam,\r\n    number: tel,\r\n  };\r\n\r\n  dispatch(addContactsRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\r\n    .catch(error => dispatch(addContactsError(error.massage)));\r\n};\r\n\r\nexport const deleteContacts = Id => dispatch => {\r\n  dispatch(deleteContactsRequest());\r\n  console.log(Id);\r\n  axios\r\n    .delete(`/contacts/${Id}`)\r\n    .then(() => dispatch(deleteContactsSuccess(Id)))\r\n    .catch(error => dispatch(deleteContactsError(error.massage)));\r\n};\r\nconst contactsOperations = { fetchContacts, addContact, deleteContacts };\r\n\r\nexport default contactsOperations;","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.loading;\r\nconst getError = state => state.error;\r\n\r\nconst getContacts = state => state.contacts;\r\n\r\nconst getFilter = state => state.filter;\r\n\r\nconst getVisibleContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n});\r\n\r\nconst contactsSelector = {\r\n  getLoading,\r\n  getError,\r\n  getContacts,\r\n  getFilter,\r\n  getVisibleContacts,\r\n};\r\n\r\nexport default contactsSelector;","import PropTypes from 'prop-types';\r\n\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ title, children }) {\r\n  return (\r\n    <div className={s.container}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nContainer.defaultProps = {\r\n  title: ' ',\r\n};\r\n\r\nContainer.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Container;","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport { toast } from 'react-toastify';\r\nimport { connect } from 'react-redux';\r\nimport { contactsOperations, contactsSelector } from '../../redux/contacts';\r\n// import contactsOperations from '../../redux/contacts/contacts-operations';\r\n// import contactsSelector from '../../redux/contacts/contacts-selectors';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  handleChangeName = e => {\r\n    this.setState({\r\n      name: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleChangeNumber = e => {\r\n    this.setState({\r\n      number: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    \r\n    if (name.trim() === '' || number.trim() === '') {\r\n      console.log('empty name and number');\r\n      toast.error(`The name and number fields are empty!`);\r\n      return;\r\n    }\r\n   else if (this.props.contacts.find(contact => contact.name === name)) {\r\n      console.log(name);\r\n      toast.error(`${name} is already in your contact list`);\r\n      return;\r\n    }\r\n     this.props.onSubmit(name, number);\r\n    this.setState({ name: '', number: '' });\r\n    \r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const nameId = shortid.generate();\r\n    const telId = shortid.generate();\r\n\r\n    return (\r\n      <>\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label htmlFor={nameId}> Name </label>\r\n        <input\r\n          className={s.input}\r\n          id={nameId}\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={this.handleChangeName}\r\n        />\r\n        <label htmlFor={telId}> Number </label>\r\n        <input\r\n          className={s.input}\r\n          id={telId}\r\n          type=\"text\"\r\n          value={number}\r\n          onChange={this.handleChangeNumber}\r\n        />\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n        </form>\r\n        </>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelector.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n  onSubmit: (nam, tel) => dispatch(contactsOperations.addContact(nam, tel)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import shortid from 'shortid';\r\nimport { connect } from 'react-redux';\r\n// import contactsActions from '../../redux/contacts/contacts-action';\r\nimport { changeFilter, contactsSelector } from '../../redux/contacts';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  const findId = shortid.generate();\r\n  return (\r\n    <div>\r\n      <label htmlFor={findId} className={s.label}>Find contacts by name</label>\r\n      <input className={s.input} id={findId} type=\"text\" value={value} onChange={onChange} />\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelector.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\n// import contactsActions from '../../redux/contacts/contacts-action';\r\nimport { contactsOperations, contactsSelector } from '../../redux/contacts';\r\nimport s from './ContactList.module.css';\r\nimport PhoneList from './fade.module.css';\r\n\r\nfunction ContactList({ items, onDeleteNumber }) {\r\n  return (\r\n    <TransitionGroup component=\"ol\" className={s.list}>\r\n      {items.map(item => (\r\n        <CSSTransition key={item.id} timeout={250} classNames={PhoneList}>\r\n          <li key={item.id} className={s.item}>\r\n            <span>\r\n              <b>{item.name}:</b> {item.number}\r\n            </span>\r\n            <button className={s.button} type=\"button\" onClick={() => onDeleteNumber(item.id)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n}\r\n\r\n// const getVisibleContacts = (contacts, filter) => {\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n// };\r\n\r\nconst mapStateToProps = state => ({\r\n  items: contactsSelector.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteNumber: id => dispatch(contactsOperations.deleteContacts(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// import Loader from 'react-loader-spinner';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './App.css';\nimport { clearError, contactsSelector } from './redux/contacts/index';\nimport Container from './Components/Container/Container';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport Filter from './Components/Filter/Filter';\nimport ContactList from './Components/ContactList/ContactList';\n\nclass App extends Component {\n  componentDidUpdate() {\n    if (this.props.error !== null) {\n      toast.error('No Network');\n      setTimeout(this.props.clearError(), 500);\n    }\n  }\n   render() {\n    return (\n      <>\n        <Container>\n          <CSSTransition in={true} appear={true} timeout={250} classNames=\"Logo\" unmountOnExit>\n            <h1>Phonebook</h1>\n          </CSSTransition>\n          <ContactForm />\n        </Container>\n        <Container title=\"Contacts\">\n          <Filter />\n          <ContactList />\n        </Container>\n        <ToastContainer position=\"top-right\" />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loading: contactsSelector.getLoading(state),\n  error: contactsSelector.getError(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  clearError: () => dispatch(clearError()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}